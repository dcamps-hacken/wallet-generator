{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "walletType",
          "type": "string"
        }
      ],
      "name": "WalletCreate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "createDestroyableWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_requiredConfirmations",
          "type": "uint256"
        }
      ],
      "name": "createMultisigWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createSimpleWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllWallets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_Id",
          "type": "uint256"
        }
      ],
      "name": "getWalletFromId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_numberOfWallets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_wallets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb5610e52323e163abea1b547e8913faedbc74cdd0c9fe665d083ebbc07256f73",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2906577",
    "logsBloom": "0x
    "blockHash": "0x6726998cb2be10f3567873e7cdc14b404724ccb075b126cfd1a6ff5e312d72de",
    "transactionHash": "0xb5610e52323e163abea1b547e8913faedbc74cdd0c9fe665d083ebbc07256f73",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2906577",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "307aae408c3ba596ae4bdbf00448bdb7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"walletType\",\"type\":\"string\"}],\"name\":\"WalletCreate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createDestroyableWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_requiredConfirmations\",\"type\":\"uint256\"}],\"name\":\"createMultisigWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSimpleWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Id\",\"type\":\"uint256\"}],\"name\":\"getWalletFromId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_numberOfWallets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_wallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"David Camps Novi\",\"details\":\"This contract uses a factory pattern to deploy a new wallet for each user\",\"kind\":\"dev\",\"methods\":{\"createSimpleWallet()\":{\"details\":\"The wallet addresses and Ids are stored in mappings so that users can get  their wallet addresses.\"}},\"title\":\"EVM wallet generator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSimpleWallet()\":{\"notice\":\"This is the function that will deploy a new wallet every time it's called.\"},\"getLatestWallet()\":{\"notice\":\"Use this function to get the address of your last created wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WalletGenerator.sol\":\"WalletGenerator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DestroyableWallet.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror DestroyableWallet__Unauthorized();\\r\\nerror DestroyableWallet__ClosedWallet();\\r\\nerror DestroyableWallet__StatusNotPreDestroy();\\r\\n\\r\\n/** @title EVM wallet\\r\\n *  @author David Camps Novi\\r\\n *  @dev This contract has some common functions used in a wallet\\r\\n */\\r\\ncontract DestroyableWallet {\\r\\n    enum WalletStatus {\\r\\n        CLOSED,\\r\\n        PREDESTROY,\\r\\n        OPEN\\r\\n    }\\r\\n\\r\\n    WalletStatus public s_status;\\r\\n\\r\\n    address private immutable i_owner;\\r\\n\\r\\n    event FundsReceived(address indexed sender, uint256 amount);\\r\\n    event FundsTransfer(address indexed recipient, uint256 amount);\\r\\n    event AllWithdraw(uint256 _amount);\\r\\n    event WalletDelete(address recipient, uint256 amount);\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert DestroyableWallet__Unauthorized();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier walletOpen() {\\r\\n        if (s_status != WalletStatus.OPEN)\\r\\n            revert DestroyableWallet__ClosedWallet();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _owner) {\\r\\n        i_owner = _owner;\\r\\n        s_status = WalletStatus.OPEN;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        //msg.data is empty\\r\\n        if (s_status != WalletStatus.OPEN)\\r\\n            revert DestroyableWallet__ClosedWallet();\\r\\n        emit FundsReceived(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        //msg.data is not empty\\r\\n        if (s_status != WalletStatus.OPEN)\\r\\n            revert DestroyableWallet__ClosedWallet();\\r\\n        emit FundsReceived(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function transfers some funds from this wallet to another address.\\r\\n     */\\r\\n    function transferFunds(uint256 _amount, address _recipient)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        payable(_recipient).transfer(_amount);\\r\\n        emit FundsTransfer(_recipient, _amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function withdraws the whole balance of this wallet to the address\\r\\n     *  that deployed it.\\r\\n     */\\r\\n    function withdrawAll(uint256 _amount) external onlyOwner {\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n        emit AllWithdraw(_amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This wallet comes with a selfdestruct functionality. In order to add extra\\r\\n     *  protection, this is a two-step process: first call preDestroy(), then deleteWallet().\\r\\n     *  Use the function cancelPreDestroy() if you want to restore the wallet to the previous\\r\\n     *  status. Once the wallet is destroyed, all its funds will be send to a given address and\\r\\n     *  the wallet will become inoperative.\\r\\n     *  @dev To control the status of the wallet, an enum \\\"status\\\" has been generated. The\\r\\n     *  function deleteWallet() can only be called if the status is PREDESTROY. The status\\r\\n     *  of the wallet can be checked with the function getStatus().\\r\\n     *  @param _recipient Is the address to which the funds of this wallet will be sent.\\r\\n     */\\r\\n    function destroyWallet(address _recipient) external onlyOwner walletOpen {\\r\\n        if (s_status != WalletStatus.PREDESTROY)\\r\\n            revert DestroyableWallet__StatusNotPreDestroy();\\r\\n        emit WalletDelete(_recipient, address(this).balance);\\r\\n        selfdestruct(payable(_recipient));\\r\\n    }\\r\\n\\r\\n    function preDestroy() external onlyOwner {\\r\\n        s_status = WalletStatus.PREDESTROY;\\r\\n    }\\r\\n\\r\\n    function cancelPreDestroy() external onlyOwner {\\r\\n        s_status = WalletStatus.OPEN;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function returns the address of your address.\\r\\n     */\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return (address(this).balance);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @dev This function will return '2' if the wallet is in its steady state and '1'\\r\\n     *  if it's in PREDESTROY status.\\r\\n     */\\r\\n    function getStatus() external view returns (WalletStatus) {\\r\\n        return s_status;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1e2cdd39a4f21e4580ba8564cf23f6865d990ced80dda4422f2df296d1b5c513\",\"license\":\"Unlicense\"},\"contracts/MultisigWallet.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror MultisigWallet__Unauthorized();\\r\\nerror MultisigWallet__AlreadyApproved();\\r\\nerror MultisigWallet_NotEnoughConfirmations();\\r\\n\\r\\ncontract MultisigWallet {\\r\\n    struct Tx {\\r\\n        uint256 amount;\\r\\n        address recipient;\\r\\n        uint256 confirmations;\\r\\n        bool executed;\\r\\n    }\\r\\n\\r\\n    uint256 private nextTxId;\\r\\n    uint256 private requiredConfirmations;\\r\\n    mapping(uint256 => Tx) private s_txs;\\r\\n    mapping(address => bool) private s_owners;\\r\\n    mapping(uint256 => mapping(address => bool)) s_approvals;\\r\\n\\r\\n    event FundsReceived(address indexed sender, uint256 amount);\\r\\n    event TxSubmit(uint256 txId, address requester);\\r\\n    event TxApprove(uint256 txId, address approver);\\r\\n    event TxSend(uint256 txId, address sender);\\r\\n\\r\\n    modifier onlyOwners() {\\r\\n        if (s_owners[msg.sender] != true) revert MultisigWallet__Unauthorized();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address[] memory _owners, uint256 _requiredConfirmations) {\\r\\n        for (uint256 i; i < _owners.length; i++) {\\r\\n            s_owners[_owners[i]] = true;\\r\\n        }\\r\\n        requiredConfirmations = _requiredConfirmations;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        emit FundsReceived(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        emit FundsReceived(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function submitTx(uint256 _amount, address _recipient) external onlyOwners {\\r\\n        s_txs[nextTxId] = Tx({\\r\\n            amount: _amount,\\r\\n            recipient: _recipient,\\r\\n            confirmations: 1,\\r\\n            executed: false\\r\\n        });\\r\\n        s_approvals[nextTxId][msg.sender] = true;\\r\\n        emit TxSubmit(nextTxId, msg.sender);\\r\\n        nextTxId += 1;\\r\\n    }\\r\\n\\r\\n    function approveTx(uint256 _txId) external onlyOwners {\\r\\n        if (s_approvals[_txId][msg.sender] != false)\\r\\n            revert MultisigWallet__AlreadyApproved();\\r\\n        s_txs[_txId].confirmations += 1;\\r\\n        emit TxApprove(_txId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function sendTx(uint256 _txId) external onlyOwners {\\r\\n        if (s_txs[_txId].confirmations < requiredConfirmations)\\r\\n            revert MultisigWallet_NotEnoughConfirmations();\\r\\n        address payable recipient = payable(s_txs[_txId].recipient);\\r\\n        uint256 amount = s_txs[_txId].amount;\\r\\n        recipient.transfer(amount);\\r\\n        emit TxSend(_txId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function addOwner(address _newOwner) external onlyOwners {\\r\\n        s_owners[_newOwner] = true;\\r\\n    }\\r\\n\\r\\n    function removeOwner(address _newOwner) external onlyOwners {\\r\\n        s_owners[_newOwner] = false;\\r\\n    }\\r\\n\\r\\n    function changeConfirmations(uint256 _newConfirmations) external {\\r\\n        requiredConfirmations = _newConfirmations;\\r\\n    }\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return (address(this).balance);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x211e5d9d8fa0f5dc3830d2762ddbb780fdaed846e6fa6e2515c907393dd5f24b\",\"license\":\"Unlicense\"},\"contracts/SimpleWallet.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror SimpleWallet__Unauthorized();\\r\\n\\r\\n/** @title EVM wallet\\r\\n *  @author David Camps Novi\\r\\n *  @dev This contract has some common functions used in a wallet\\r\\n */\\r\\ncontract SimpleWallet {\\r\\n    address private immutable i_owner;\\r\\n\\r\\n    event FundsReceived(address indexed sender, uint256 amount);\\r\\n    event FundsTransfer(address indexed recipient, uint256 amount);\\r\\n    event AllWithdraw(uint256 _amount);\\r\\n    event WalletDelete(address recipient, uint256 amount);\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert SimpleWallet__Unauthorized();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address _owner) {\\r\\n        i_owner = _owner;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        emit FundsReceived(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        emit FundsReceived(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function transfers some funds from this wallet to another address.\\r\\n     */\\r\\n    function transferFunds(uint256 _amount, address _recipient)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        payable(_recipient).transfer(_amount);\\r\\n        emit FundsTransfer(_recipient, _amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function withdraws the whole balance of this wallet to the address\\r\\n     *  that deployed it.\\r\\n     */\\r\\n    function withdrawAll(uint256 _amount) external onlyOwner {\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n        emit AllWithdraw(_amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice This function returns the address of your address.\\r\\n     */\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return (address(this).balance);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x11ba68bcc680d9a0c825ed2ee5b7decbdb56cbdef31e3b1e8d5663fc4bb45f5e\",\"license\":\"Unlicense\"},\"contracts/WalletGenerator.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"./SimpleWallet.sol\\\";\\r\\nimport \\\"./DestroyableWallet.sol\\\";\\r\\nimport \\\"./MultisigWallet.sol\\\";\\r\\n\\r\\n/** @title EVM wallet generator\\r\\n *  @author David Camps Novi\\r\\n *  @dev This contract uses a factory pattern to deploy a new wallet for each user\\r\\n */\\r\\ncontract WalletGenerator {\\r\\n    mapping(address => mapping(uint256 => address)) public s_wallets;\\r\\n    /* Number of Wallets created by each User */\\r\\n    mapping(address => uint256) public s_numberOfWallets;\\r\\n\\r\\n    event WalletCreate(\\r\\n        address indexed owner,\\r\\n        address indexed walletAddress,\\r\\n        string walletType\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     *  @notice This is the function that will deploy a new wallet every time it's called.\\r\\n     *  @dev The wallet addresses and Ids are stored in mappings so that users can get\\r\\n     *  their wallet addresses.\\r\\n     */\\r\\n    function createSimpleWallet() external {\\r\\n        SimpleWallet newWallet = new SimpleWallet(msg.sender);\\r\\n        uint256 nextWalletId = s_numberOfWallets[msg.sender];\\r\\n        s_wallets[msg.sender][nextWalletId] = address(newWallet);\\r\\n        s_numberOfWallets[msg.sender] += 1;\\r\\n        emit WalletCreate(msg.sender, address(newWallet), \\\"SimpleWallet\\\");\\r\\n    }\\r\\n\\r\\n    function createDestroyableWallet() external {\\r\\n        DestroyableWallet newWallet = new DestroyableWallet(msg.sender);\\r\\n        uint256 nextWalletId = s_numberOfWallets[msg.sender];\\r\\n        s_wallets[msg.sender][nextWalletId] = address(newWallet);\\r\\n        s_numberOfWallets[msg.sender] += 1;\\r\\n        emit WalletCreate(msg.sender, address(newWallet), \\\"DestroyableWallet\\\");\\r\\n    }\\r\\n\\r\\n    function createMultisigWallet(\\r\\n        address[] memory _owners,\\r\\n        uint256 _requiredConfirmations\\r\\n    ) external {\\r\\n        MultisigWallet newWallet = new MultisigWallet(\\r\\n            _owners,\\r\\n            _requiredConfirmations\\r\\n        );\\r\\n        uint256 nextWalletId = s_numberOfWallets[msg.sender];\\r\\n        s_wallets[msg.sender][nextWalletId] = address(newWallet);\\r\\n        s_numberOfWallets[msg.sender] += 1;\\r\\n        emit WalletCreate(msg.sender, address(newWallet), \\\"MultisigWallet\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  @notice Use this function to get the address of your last created wallet\\r\\n     */\\r\\n    function getLatestWallet() external view returns (address) {\\r\\n        uint256 latestId = s_numberOfWallets[msg.sender];\\r\\n        return s_wallets[msg.sender][latestId];\\r\\n    }\\r\\n\\r\\n    function getWalletFromId(uint256 _Id) external view returns (address) {\\r\\n        return s_wallets[msg.sender][_Id];\\r\\n    }\\r\\n\\r\\n    function getAllWallets() external view returns (address[] memory) {\\r\\n        address[] memory addresses;\\r\\n        for (uint256 i; i < s_numberOfWallets[msg.sender]; i++) {\\r\\n            addresses[i] = s_wallets[msg.sender][i];\\r\\n        }\\r\\n        return addresses;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xffc99de635120e7266038d7dcc7681b051f138c5682e867489aa0377d5e5377c\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506133f0806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c80635af90cdb11620000635780635af90cdb14620001495780635b3661ce146200017f5780635eaf614d146200019f578063eb574fd614620001ab5762000094565b8063069af170146200009957806311047d9514620000cf5780631bfa8601146200010557806341e588e91462000127575b600080fd5b620000b76004803603810190620000b1919062000aeb565b620001b7565b604051620000c6919062000e03565b60405180910390f35b620000ed6004803603810190620000e7919062000b1d565b620001cf565b604051620000fc919062000d28565b60405180910390f35b6200010f62000211565b6040516200011e919062000d45565b60405180910390f35b620001316200033d565b60405162000140919062000d28565b60405180910390f35b62000167600480360381019062000161919062000bca565b620003f8565b60405162000176919062000d28565b60405180910390f35b6200019d600480360381019062000197919062000b64565b62000471565b005b620001a962000645565b005b620001b562000815565b005b60016020528060005260406000206000915090505481565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608060005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481101562000335576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110620002e557620002e462001010565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806200032c9062000f93565b91505062000217565b508091505090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600082826040516200048390620009e5565b6200049092919062000d69565b604051809103906000f080158015620004ad573d6000803e3d6000fd5b5090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620005d3919062000ec2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01a5d4b6d3c14edb12516667536b3fd020be5fcdcac29048a1f0a55e3ee4763b604051620006379062000d9d565b60405180910390a350505050565b6000336040516200065690620009f3565b62000662919062000d28565b604051809103906000f0801580156200067f573d6000803e3d6000fd5b5090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620007a5919062000ec2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01a5d4b6d3c14edb12516667536b3fd020be5fcdcac29048a1f0a55e3ee4763b604051620008099062000dbf565b60405180910390a35050565b600033604051620008269062000a01565b62000832919062000d28565b604051809103906000f0801580156200084f573d6000803e3d6000fd5b5090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000975919062000ec2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01a5d4b6d3c14edb12516667536b3fd020be5fcdcac29048a1f0a55e3ee4763b604051620009d99062000de1565b60405180910390a35050565b610ff6806200114383390190565b610610806200213983390190565b610c72806200274983390190565b600062000a2662000a208462000e49565b62000e20565b9050808382526020820190508285602086028201111562000a4c5762000a4b62001073565b5b60005b8581101562000a80578162000a65888262000a8a565b84526020840193506020830192505060018101905062000a4f565b5050509392505050565b60008135905062000a9b816200110e565b92915050565b600082601f83011262000ab95762000ab86200106e565b5b813562000acb84826020860162000a0f565b91505092915050565b60008135905062000ae58162001128565b92915050565b60006020828403121562000b045762000b036200107d565b5b600062000b148482850162000a8a565b91505092915050565b6000806040838503121562000b375762000b366200107d565b5b600062000b478582860162000a8a565b925050602062000b5a8582860162000ad4565b9150509250929050565b6000806040838503121562000b7e5762000b7d6200107d565b5b600083013567ffffffffffffffff81111562000b9f5762000b9e62001078565b5b62000bad8582860162000aa1565b925050602062000bc08582860162000ad4565b9150509250929050565b60006020828403121562000be35762000be26200107d565b5b600062000bf38482850162000ad4565b91505092915050565b600062000c0a838362000c16565b60208301905092915050565b62000c218162000f1f565b82525050565b62000c328162000f1f565b82525050565b600062000c458262000e88565b62000c51818562000ea0565b935062000c5e8362000e78565b8060005b8381101562000c9557815162000c79888262000bfc565b975062000c868362000e93565b92505060018101905062000c62565b5085935050505092915050565b600062000cb1600e8362000eb1565b915062000cbe8262001093565b602082019050919050565b600062000cd8600c8362000eb1565b915062000ce582620010bc565b602082019050919050565b600062000cff60118362000eb1565b915062000d0c82620010e5565b602082019050919050565b62000d228162000f53565b82525050565b600060208201905062000d3f600083018462000c27565b92915050565b6000602082019050818103600083015262000d61818462000c38565b905092915050565b6000604082019050818103600083015262000d85818562000c38565b905062000d96602083018462000d17565b9392505050565b6000602082019050818103600083015262000db88162000ca2565b9050919050565b6000602082019050818103600083015262000dda8162000cc9565b9050919050565b6000602082019050818103600083015262000dfc8162000cf0565b9050919050565b600060208201905062000e1a600083018462000d17565b92915050565b600062000e2c62000e3f565b905062000e3a828262000f5d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000e675762000e666200103f565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000ecf8262000f53565b915062000edc8362000f53565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000f145762000f1362000fe1565b5b828201905092915050565b600062000f2c8262000f33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b62000f688262001082565b810181811067ffffffffffffffff8211171562000f8a5762000f896200103f565b5b80604052505050565b600062000fa08262000f53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000fd65762000fd562000fe1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4d756c746973696757616c6c6574000000000000000000000000000000000000600082015250565b7f53696d706c6557616c6c65740000000000000000000000000000000000000000600082015250565b7f44657374726f7961626c6557616c6c6574000000000000000000000000000000600082015250565b620011198162000f1f565b81146200112557600080fd5b50565b620011338162000f53565b81146200113f57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162000ff638038062000ff68339818101604052810190620000379190620001bb565b60005b8251811015620000cf5760016003600085848151811062000060576200005f6200036a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620000c690620002ed565b9150506200003a565b5080600181905550505062000421565b6000620000f6620000f0846200024a565b62000221565b905080838252602082019050828560208602820111156200011c576200011b620003cd565b5b60005b858110156200015057816200013588826200015a565b8452602084019350602083019250506001810190506200011f565b5050509392505050565b6000815190506200016b81620003ed565b92915050565b600082601f830112620001895762000188620003c8565b5b81516200019b848260208601620000df565b91505092915050565b600081519050620001b58162000407565b92915050565b60008060408385031215620001d557620001d4620003d7565b5b600083015167ffffffffffffffff811115620001f657620001f5620003d2565b5b620002048582860162000171565b92505060206200021785828601620001a4565b9150509250929050565b60006200022d62000240565b90506200023b8282620002b7565b919050565b6000604051905090565b600067ffffffffffffffff82111562000268576200026762000399565b5b602082029050602081019050919050565b600062000286826200028d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002c282620003dc565b810181811067ffffffffffffffff82111715620002e457620002e362000399565b5b80604052505050565b6000620002fa82620002ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000330576200032f6200033b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620003f88162000279565b81146200040457600080fd5b50565b6200041281620002ad565b81146200041e57600080fd5b50565b610bc580620004316000396000f3fe6080604052600436106100745760003560e01c80633aec25291161004e5780633aec2529146101965780637065cb48146101bf5780638bebea9a146101e8578063a152c35c14610211576100c9565b80631087393a1461011957806312065fe014610142578063173825d91461016d576100c9565b366100c9573373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f346040516100bf9190610a57565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f3460405161010f9190610a57565b60405180910390a2005b34801561012557600080fd5b50610140600480360381019061013b91906109cc565b61023a565b005b34801561014e57600080fd5b506101576103c9565b6040516101649190610a57565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f919061099f565b6103d1565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906109cc565b6104b6565b005b3480156101cb57600080fd5b506101e660048036038101906101e1919061099f565b6104c0565b005b3480156101f457600080fd5b5061020f600480360381019061020a91906109cc565b6105a5565b005b34801561021d57600080fd5b50610238600480360381019061023391906109f9565b61075c565b005b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146102c4576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600015156004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461035f576040517f5400fe0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002600083815260200190815260200160002060020160008282546103869190610a9b565b925050819055507f4bfc77ad1a98e4db017500179cf0661ff34ea04dcd67dace6d07d09aeac2137d81336040516103be929190610a72565b60405180910390a150565b600047905090565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461045b576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060018190555050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461054a576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461062f576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015460026000838152602001908152602001600020600201541015610681576040517f6a829b7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008481526020019081526020016000206000015490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561071d573d6000803e3d6000fd5b507f2f4dd9f8910a5b3bc1c8c1260a8a263d143a1dd1085eac84a7c13e9b3c3084d1833360405161074f929190610a72565b60405180910390a1505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146107e6576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016000151581525060026000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506001600460008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb39ef3dfed7e7c208c36828e9a59b5246c9cf55e7230bdc7ce6fbe6efca5b19d60005433604051610950929190610a72565b60405180910390a1600160008082825461096a9190610a9b565b925050819055505050565b60008135905061098481610b61565b92915050565b60008135905061099981610b78565b92915050565b6000602082840312156109b5576109b4610b5c565b5b60006109c384828501610975565b91505092915050565b6000602082840312156109e2576109e1610b5c565b5b60006109f08482850161098a565b91505092915050565b60008060408385031215610a1057610a0f610b5c565b5b6000610a1e8582860161098a565b9250506020610a2f85828601610975565b9150509250929050565b610a4281610af1565b82525050565b610a5181610b23565b82525050565b6000602082019050610a6c6000830184610a48565b92915050565b6000604082019050610a876000830185610a48565b610a946020830184610a39565b9392505050565b6000610aa682610b23565b9150610ab183610b23565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae657610ae5610b2d565b5b828201905092915050565b6000610afc82610b03565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610b6a81610af1565b8114610b7557600080fd5b50565b610b8181610b23565b8114610b8c57600080fd5b5056fea2646970667358221220ba9cc07b1c0ad60e64bbde0ec94976f6f22c2dff2d944fc626eb77438311b75564736f6c6343000807003360a060405234801561001057600080fd5b5060405161061038038061061083398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100ff565b60008151905061007e816100e8565b92915050565b60006020828403121561009a576100996100e3565b5b60006100a88482850161006f565b91505092915050565b60006100bc826100c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100f1816100b1565b81146100fc57600080fd5b50565b60805160601c6104ec61012460003960008181610164015261026a01526104ec6000f3fe6080604052600436106100385760003560e01c806312065fe0146100dd578063958e2d3114610108578063f08e362f146101315761008d565b3661008d573373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f34604051610083919061042c565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f346040516100d3919061042c565b60405180910390a2005b3480156100e957600080fd5b506100f261015a565b6040516100ff919061042c565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a91906103b0565b610162565b005b34801561013d57600080fd5b50610158600480360381019061015391906103dd565b610268565b005b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e7576040517ffbe34a0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561022d573d6000803e3d6000fd5b507ff01e20b4bd95fdc42daa2d7c96d4d4cf83ee0bda1723dda838c57102e47d16808160405161025d919061042c565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ed576040517ffbe34a0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610333573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fe4a4217f2dc0b69a9a45e3fd49d47fc0e2081b6590b9c8bfa4b7d3f17dfdf9178360405161037a919061042c565b60405180910390a25050565b60008135905061039581610488565b92915050565b6000813590506103aa8161049f565b92915050565b6000602082840312156103c6576103c5610483565b5b60006103d48482850161039b565b91505092915050565b600080604083850312156103f4576103f3610483565b5b60006104028582860161039b565b925050602061041385828601610386565b9150509250929050565b61042681610479565b82525050565b6000602082019050610441600083018461041d565b92915050565b600061045282610459565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61049181610447565b811461049c57600080fd5b50565b6104a881610479565b81146104b357600080fd5b5056fea2646970667358221220fcb725a714412e7a835e378d24947fdb9b7adc635aebe1bd1d6ad59268874a0b64736f6c6343000807003360a060405234801561001057600080fd5b50604051610c72380380610c72833981810160405281019061003291906100ae565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060026000806101000a81548160ff0219169083600281111561008e5761008d61010d565b5b021790555050610158565b6000815190506100a881610141565b92915050565b6000602082840312156100c4576100c361013c565b5b60006100d284828501610099565b91505092915050565b60006100e6826100ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b61014a816100db565b811461015557600080fd5b50565b60805160601c610ae061019260003960008181610324015281816104ff015281816105b0015281816106b601526107670152610ae06000f3fe60806040526004361061007f5760003560e01c80636ec7c08b1161004e5780636ec7c08b146102a2578063958e2d31146102b9578063cea73e13146102e2578063f08e362f146102f95761013e565b80630ce62df4146101f857806312065fe0146102215780631ca5872c1461024c5780634e69d560146102775761013e565b3661013e5760028081111561009757610096610a34565b5b60008054906101000a900460ff1660028111156100b7576100b6610a34565b5b146100ee576040517ff3884b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f3460405161013491906109b8565b60405180910390a2005b60028081111561015157610150610a34565b5b60008054906101000a900460ff16600281111561017157610170610a34565b5b146101a8576040517ff3884b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f346040516101ee91906109b8565b60405180910390a2005b34801561020457600080fd5b5061021f600480360381019061021a91906108ad565b610322565b005b34801561022d57600080fd5b506102366104ce565b60405161024391906109b8565b60405180910390f35b34801561025857600080fd5b506102616104d6565b60405161026e919061099d565b60405180910390f35b34801561028357600080fd5b5061028c6104e7565b604051610299919061099d565b60405180910390f35b3480156102ae57600080fd5b506102b76104fd565b005b3480156102c557600080fd5b506102e060048036038101906102db91906108da565b6105ae565b005b3480156102ee57600080fd5b506102f76106b4565b005b34801561030557600080fd5b50610320600480360381019061031b9190610907565b610765565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a7576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002808111156103ba576103b9610a34565b5b60008054906101000a900460ff1660028111156103da576103d9610a34565b5b14610411576040517ff3884b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561042557610424610a34565b5b60008054906101000a900460ff16600281111561044557610444610a34565b5b1461047c576040517fbbd2929700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f998e6e05d2330299382a81281a339769590db319d1246f9818ce2f46128c13c681476040516104ad929190610974565b60405180910390a18073ffffffffffffffffffffffffffffffffffffffff16ff5b600047905090565b60008054906101000a900460ff1681565b60008060009054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610582576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000806101000a81548160ff021916908360028111156105a7576105a6610a34565b5b0217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610633576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610679573d6000803e3d6000fd5b507ff01e20b4bd95fdc42daa2d7c96d4d4cf83ee0bda1723dda838c57102e47d1680816040516106a991906109b8565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610739576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000806101000a81548160ff0219169083600281111561075e5761075d610a34565b5b0217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ea576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610830573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fe4a4217f2dc0b69a9a45e3fd49d47fc0e2081b6590b9c8bfa4b7d3f17dfdf9178360405161087791906109b8565b60405180910390a25050565b60008135905061089281610a7c565b92915050565b6000813590506108a781610a93565b92915050565b6000602082840312156108c3576108c2610a63565b5b60006108d184828501610883565b91505092915050565b6000602082840312156108f0576108ef610a63565b5b60006108fe84828501610898565b91505092915050565b6000806040838503121561091e5761091d610a63565b5b600061092c85828601610898565b925050602061093d85828601610883565b9150509250929050565b610950816109d3565b82525050565b61095f81610a22565b82525050565b61096e81610a18565b82525050565b60006040820190506109896000830185610947565b6109966020830184610965565b9392505050565b60006020820190506109b26000830184610956565b92915050565b60006020820190506109cd6000830184610965565b92915050565b60006109de826109f8565b9050919050565b60008190506109f382610a68565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a2d826109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b60038110610a7957610a78610a34565b5b50565b610a85816109d3565b8114610a9057600080fd5b50565b610a9c81610a18565b8114610aa757600080fd5b5056fea2646970667358221220e5aaabf7c2567654c02effc53c65231112f2a20651565386a2840ba02ff3d5de64736f6c63430008070033a2646970667358221220b2e6604e27a69dc0f5304fd9801a6b6ced9f247230e93d6fcfcb73eb4d997a5364736f6c63430008070033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c80635af90cdb11620000635780635af90cdb14620001495780635b3661ce146200017f5780635eaf614d146200019f578063eb574fd614620001ab5762000094565b8063069af170146200009957806311047d9514620000cf5780631bfa8601146200010557806341e588e91462000127575b600080fd5b620000b76004803603810190620000b1919062000aeb565b620001b7565b604051620000c6919062000e03565b60405180910390f35b620000ed6004803603810190620000e7919062000b1d565b620001cf565b604051620000fc919062000d28565b60405180910390f35b6200010f62000211565b6040516200011e919062000d45565b60405180910390f35b620001316200033d565b60405162000140919062000d28565b60405180910390f35b62000167600480360381019062000161919062000bca565b620003f8565b60405162000176919062000d28565b60405180910390f35b6200019d600480360381019062000197919062000b64565b62000471565b005b620001a962000645565b005b620001b562000815565b005b60016020528060005260406000206000915090505481565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608060005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481101562000335576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828281518110620002e557620002e462001010565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806200032c9062000f93565b91505062000217565b508091505090565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600082826040516200048390620009e5565b6200049092919062000d69565b604051809103906000f080158015620004ad573d6000803e3d6000fd5b5090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620005d3919062000ec2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01a5d4b6d3c14edb12516667536b3fd020be5fcdcac29048a1f0a55e3ee4763b604051620006379062000d9d565b60405180910390a350505050565b6000336040516200065690620009f3565b62000662919062000d28565b604051809103906000f0801580156200067f573d6000803e3d6000fd5b5090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620007a5919062000ec2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01a5d4b6d3c14edb12516667536b3fd020be5fcdcac29048a1f0a55e3ee4763b604051620008099062000dbf565b60405180910390a35050565b600033604051620008269062000a01565b62000832919062000d28565b604051809103906000f0801580156200084f573d6000803e3d6000fd5b5090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000975919062000ec2565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01a5d4b6d3c14edb12516667536b3fd020be5fcdcac29048a1f0a55e3ee4763b604051620009d99062000de1565b60405180910390a35050565b610ff6806200114383390190565b610610806200213983390190565b610c72806200274983390190565b600062000a2662000a208462000e49565b62000e20565b9050808382526020820190508285602086028201111562000a4c5762000a4b62001073565b5b60005b8581101562000a80578162000a65888262000a8a565b84526020840193506020830192505060018101905062000a4f565b5050509392505050565b60008135905062000a9b816200110e565b92915050565b600082601f83011262000ab95762000ab86200106e565b5b813562000acb84826020860162000a0f565b91505092915050565b60008135905062000ae58162001128565b92915050565b60006020828403121562000b045762000b036200107d565b5b600062000b148482850162000a8a565b91505092915050565b6000806040838503121562000b375762000b366200107d565b5b600062000b478582860162000a8a565b925050602062000b5a8582860162000ad4565b9150509250929050565b6000806040838503121562000b7e5762000b7d6200107d565b5b600083013567ffffffffffffffff81111562000b9f5762000b9e62001078565b5b62000bad8582860162000aa1565b925050602062000bc08582860162000ad4565b9150509250929050565b60006020828403121562000be35762000be26200107d565b5b600062000bf38482850162000ad4565b91505092915050565b600062000c0a838362000c16565b60208301905092915050565b62000c218162000f1f565b82525050565b62000c328162000f1f565b82525050565b600062000c458262000e88565b62000c51818562000ea0565b935062000c5e8362000e78565b8060005b8381101562000c9557815162000c79888262000bfc565b975062000c868362000e93565b92505060018101905062000c62565b5085935050505092915050565b600062000cb1600e8362000eb1565b915062000cbe8262001093565b602082019050919050565b600062000cd8600c8362000eb1565b915062000ce582620010bc565b602082019050919050565b600062000cff60118362000eb1565b915062000d0c82620010e5565b602082019050919050565b62000d228162000f53565b82525050565b600060208201905062000d3f600083018462000c27565b92915050565b6000602082019050818103600083015262000d61818462000c38565b905092915050565b6000604082019050818103600083015262000d85818562000c38565b905062000d96602083018462000d17565b9392505050565b6000602082019050818103600083015262000db88162000ca2565b9050919050565b6000602082019050818103600083015262000dda8162000cc9565b9050919050565b6000602082019050818103600083015262000dfc8162000cf0565b9050919050565b600060208201905062000e1a600083018462000d17565b92915050565b600062000e2c62000e3f565b905062000e3a828262000f5d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000e675762000e666200103f565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000ecf8262000f53565b915062000edc8362000f53565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000f145762000f1362000fe1565b5b828201905092915050565b600062000f2c8262000f33565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b62000f688262001082565b810181811067ffffffffffffffff8211171562000f8a5762000f896200103f565b5b80604052505050565b600062000fa08262000f53565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000fd65762000fd562000fe1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4d756c746973696757616c6c6574000000000000000000000000000000000000600082015250565b7f53696d706c6557616c6c65740000000000000000000000000000000000000000600082015250565b7f44657374726f7961626c6557616c6c6574000000000000000000000000000000600082015250565b620011198162000f1f565b81146200112557600080fd5b50565b620011338162000f53565b81146200113f57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162000ff638038062000ff68339818101604052810190620000379190620001bb565b60005b8251811015620000cf5760016003600085848151811062000060576200005f6200036a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620000c690620002ed565b9150506200003a565b5080600181905550505062000421565b6000620000f6620000f0846200024a565b62000221565b905080838252602082019050828560208602820111156200011c576200011b620003cd565b5b60005b858110156200015057816200013588826200015a565b8452602084019350602083019250506001810190506200011f565b5050509392505050565b6000815190506200016b81620003ed565b92915050565b600082601f830112620001895762000188620003c8565b5b81516200019b848260208601620000df565b91505092915050565b600081519050620001b58162000407565b92915050565b60008060408385031215620001d557620001d4620003d7565b5b600083015167ffffffffffffffff811115620001f657620001f5620003d2565b5b620002048582860162000171565b92505060206200021785828601620001a4565b9150509250929050565b60006200022d62000240565b90506200023b8282620002b7565b919050565b6000604051905090565b600067ffffffffffffffff82111562000268576200026762000399565b5b602082029050602081019050919050565b600062000286826200028d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002c282620003dc565b810181811067ffffffffffffffff82111715620002e457620002e362000399565b5b80604052505050565b6000620002fa82620002ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000330576200032f6200033b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620003f88162000279565b81146200040457600080fd5b50565b6200041281620002ad565b81146200041e57600080fd5b50565b610bc580620004316000396000f3fe6080604052600436106100745760003560e01c80633aec25291161004e5780633aec2529146101965780637065cb48146101bf5780638bebea9a146101e8578063a152c35c14610211576100c9565b80631087393a1461011957806312065fe014610142578063173825d91461016d576100c9565b366100c9573373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f346040516100bf9190610a57565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f3460405161010f9190610a57565b60405180910390a2005b34801561012557600080fd5b50610140600480360381019061013b91906109cc565b61023a565b005b34801561014e57600080fd5b506101576103c9565b6040516101649190610a57565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f919061099f565b6103d1565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906109cc565b6104b6565b005b3480156101cb57600080fd5b506101e660048036038101906101e1919061099f565b6104c0565b005b3480156101f457600080fd5b5061020f600480360381019061020a91906109cc565b6105a5565b005b34801561021d57600080fd5b50610238600480360381019061023391906109f9565b61075c565b005b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146102c4576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600015156004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461035f576040517f5400fe0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016002600083815260200190815260200160002060020160008282546103869190610a9b565b925050819055507f4bfc77ad1a98e4db017500179cf0661ff34ea04dcd67dace6d07d09aeac2137d81336040516103be929190610a72565b60405180910390a150565b600047905090565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461045b576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060018190555050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461054a576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461062f576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015460026000838152602001908152602001600020600201541015610681576040517f6a829b7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008481526020019081526020016000206000015490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561071d573d6000803e3d6000fd5b507f2f4dd9f8910a5b3bc1c8c1260a8a263d143a1dd1085eac84a7c13e9b3c3084d1833360405161074f929190610a72565b60405180910390a1505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146107e6576040517fe211615100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001600181526020016000151581525060026000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506001600460008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb39ef3dfed7e7c208c36828e9a59b5246c9cf55e7230bdc7ce6fbe6efca5b19d60005433604051610950929190610a72565b60405180910390a1600160008082825461096a9190610a9b565b925050819055505050565b60008135905061098481610b61565b92915050565b60008135905061099981610b78565b92915050565b6000602082840312156109b5576109b4610b5c565b5b60006109c384828501610975565b91505092915050565b6000602082840312156109e2576109e1610b5c565b5b60006109f08482850161098a565b91505092915050565b60008060408385031215610a1057610a0f610b5c565b5b6000610a1e8582860161098a565b9250506020610a2f85828601610975565b9150509250929050565b610a4281610af1565b82525050565b610a5181610b23565b82525050565b6000602082019050610a6c6000830184610a48565b92915050565b6000604082019050610a876000830185610a48565b610a946020830184610a39565b9392505050565b6000610aa682610b23565b9150610ab183610b23565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae657610ae5610b2d565b5b828201905092915050565b6000610afc82610b03565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610b6a81610af1565b8114610b7557600080fd5b50565b610b8181610b23565b8114610b8c57600080fd5b5056fea2646970667358221220ba9cc07b1c0ad60e64bbde0ec94976f6f22c2dff2d944fc626eb77438311b75564736f6c6343000807003360a060405234801561001057600080fd5b5060405161061038038061061083398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100ff565b60008151905061007e816100e8565b92915050565b60006020828403121561009a576100996100e3565b5b60006100a88482850161006f565b91505092915050565b60006100bc826100c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100f1816100b1565b81146100fc57600080fd5b50565b60805160601c6104ec61012460003960008181610164015261026a01526104ec6000f3fe6080604052600436106100385760003560e01c806312065fe0146100dd578063958e2d3114610108578063f08e362f146101315761008d565b3661008d573373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f34604051610083919061042c565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f346040516100d3919061042c565b60405180910390a2005b3480156100e957600080fd5b506100f261015a565b6040516100ff919061042c565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a91906103b0565b610162565b005b34801561013d57600080fd5b50610158600480360381019061015391906103dd565b610268565b005b600047905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e7576040517ffbe34a0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561022d573d6000803e3d6000fd5b507ff01e20b4bd95fdc42daa2d7c96d4d4cf83ee0bda1723dda838c57102e47d16808160405161025d919061042c565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ed576040517ffbe34a0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610333573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fe4a4217f2dc0b69a9a45e3fd49d47fc0e2081b6590b9c8bfa4b7d3f17dfdf9178360405161037a919061042c565b60405180910390a25050565b60008135905061039581610488565b92915050565b6000813590506103aa8161049f565b92915050565b6000602082840312156103c6576103c5610483565b5b60006103d48482850161039b565b91505092915050565b600080604083850312156103f4576103f3610483565b5b60006104028582860161039b565b925050602061041385828601610386565b9150509250929050565b61042681610479565b82525050565b6000602082019050610441600083018461041d565b92915050565b600061045282610459565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61049181610447565b811461049c57600080fd5b50565b6104a881610479565b81146104b357600080fd5b5056fea2646970667358221220fcb725a714412e7a835e378d24947fdb9b7adc635aebe1bd1d6ad59268874a0b64736f6c6343000807003360a060405234801561001057600080fd5b50604051610c72380380610c72833981810160405281019061003291906100ae565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060026000806101000a81548160ff0219169083600281111561008e5761008d61010d565b5b021790555050610158565b6000815190506100a881610141565b92915050565b6000602082840312156100c4576100c361013c565b5b60006100d284828501610099565b91505092915050565b60006100e6826100ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b61014a816100db565b811461015557600080fd5b50565b60805160601c610ae061019260003960008181610324015281816104ff015281816105b0015281816106b601526107670152610ae06000f3fe60806040526004361061007f5760003560e01c80636ec7c08b1161004e5780636ec7c08b146102a2578063958e2d31146102b9578063cea73e13146102e2578063f08e362f146102f95761013e565b80630ce62df4146101f857806312065fe0146102215780631ca5872c1461024c5780634e69d560146102775761013e565b3661013e5760028081111561009757610096610a34565b5b60008054906101000a900460ff1660028111156100b7576100b6610a34565b5b146100ee576040517ff3884b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f3460405161013491906109b8565b60405180910390a2005b60028081111561015157610150610a34565b5b60008054906101000a900460ff16600281111561017157610170610a34565b5b146101a8576040517ff3884b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f346040516101ee91906109b8565b60405180910390a2005b34801561020457600080fd5b5061021f600480360381019061021a91906108ad565b610322565b005b34801561022d57600080fd5b506102366104ce565b60405161024391906109b8565b60405180910390f35b34801561025857600080fd5b506102616104d6565b60405161026e919061099d565b60405180910390f35b34801561028357600080fd5b5061028c6104e7565b604051610299919061099d565b60405180910390f35b3480156102ae57600080fd5b506102b76104fd565b005b3480156102c557600080fd5b506102e060048036038101906102db91906108da565b6105ae565b005b3480156102ee57600080fd5b506102f76106b4565b005b34801561030557600080fd5b50610320600480360381019061031b9190610907565b610765565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a7576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002808111156103ba576103b9610a34565b5b60008054906101000a900460ff1660028111156103da576103d9610a34565b5b14610411576040517ff3884b3200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561042557610424610a34565b5b60008054906101000a900460ff16600281111561044557610444610a34565b5b1461047c576040517fbbd2929700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f998e6e05d2330299382a81281a339769590db319d1246f9818ce2f46128c13c681476040516104ad929190610974565b60405180910390a18073ffffffffffffffffffffffffffffffffffffffff16ff5b600047905090565b60008054906101000a900460ff1681565b60008060009054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610582576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000806101000a81548160ff021916908360028111156105a7576105a6610a34565b5b0217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610633576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610679573d6000803e3d6000fd5b507ff01e20b4bd95fdc42daa2d7c96d4d4cf83ee0bda1723dda838c57102e47d1680816040516106a991906109b8565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610739576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000806101000a81548160ff0219169083600281111561075e5761075d610a34565b5b0217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ea576040517fd8eb553e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610830573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fe4a4217f2dc0b69a9a45e3fd49d47fc0e2081b6590b9c8bfa4b7d3f17dfdf9178360405161087791906109b8565b60405180910390a25050565b60008135905061089281610a7c565b92915050565b6000813590506108a781610a93565b92915050565b6000602082840312156108c3576108c2610a63565b5b60006108d184828501610883565b91505092915050565b6000602082840312156108f0576108ef610a63565b5b60006108fe84828501610898565b91505092915050565b6000806040838503121561091e5761091d610a63565b5b600061092c85828601610898565b925050602061093d85828601610883565b9150509250929050565b610950816109d3565b82525050565b61095f81610a22565b82525050565b61096e81610a18565b82525050565b60006040820190506109896000830185610947565b6109966020830184610965565b9392505050565b60006020820190506109b26000830184610956565b92915050565b60006020820190506109cd6000830184610965565b92915050565b60006109de826109f8565b9050919050565b60008190506109f382610a68565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a2d826109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b60038110610a7957610a78610a34565b5b50565b610a85816109d3565b8114610a9057600080fd5b50565b610a9c81610a18565b8114610aa757600080fd5b5056fea2646970667358221220e5aaabf7c2567654c02effc53c65231112f2a20651565386a2840ba02ff3d5de64736f6c63430008070033a2646970667358221220b2e6604e27a69dc0f5304fd9801a6b6ced9f247230e93d6fcfcb73eb4d997a5364736f6c63430008070033",
  "devdoc": {
    "author": "David Camps Novi",
    "details": "This contract uses a factory pattern to deploy a new wallet for each user",
    "kind": "dev",
    "methods": {
      "createSimpleWallet()": {
        "details": "The wallet addresses and Ids are stored in mappings so that users can get  their wallet addresses."
      }
    },
    "title": "EVM wallet generator",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createSimpleWallet()": {
        "notice": "This is the function that will deploy a new wallet every time it's called."
      },
      "getLatestWallet()": {
        "notice": "Use this function to get the address of your last created wallet"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 699,
        "contract": "contracts/WalletGenerator.sol:WalletGenerator",
        "label": "s_wallets",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      },
      {
        "astId": 703,
        "contract": "contracts/WalletGenerator.sol:WalletGenerator",
        "label": "s_numberOfWallets",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}